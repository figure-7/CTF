class Solution {
public:
    vector<string> curr;
    vector<int> res;
    string aim = "";
    int sum = 0;
    
    vector<int> lexicalOrder(int n) {
        string s = "ACGTRNDEG";
        for(int i = 0; i < s.size(); i++) {
            aim += s[i];
            for(int j = 0; j < s.size(); j++) {
                aim += s[j];
                for(int k = 0; k < s.size(); k++) {
                    aim += s[k];
                    for(int a = 0; a < s.size(); a++) {
                        aim += s[a];
                        for(int b = 0; b < s.size(); b++) {
                            aim += s[b];
                            for(int c = 0; c < s.size(); c++) {
                                aim += s[c];
                                for(int d = 0; d < s.size(); d++) {
                                    aim += s[d];
                                    for(int e = 0; e < s.size(); e++) {
                                        aim += s[e];
                                        for(int f = 0; f < s.size(); f++) {
                                            sum++;
                                            aim += s[f];
                                            if(aim == "AAAARNDEG") {
                                                cout<<sum<<endl;
                                                break;
                                            }
                                            aim = aim.substr(0, aim.size() - 1);
                                        }
                                        aim = aim.substr(0, aim.size() - 1);
                                    }
                                    aim = aim.substr(0, aim.size() - 1);
                                }
                                aim = aim.substr(0, aim.size() - 1);
                            }
                            aim = aim.substr(0, aim.size() - 1);
                        }
                    }
                }
            }
        }
        return res;
    }
};